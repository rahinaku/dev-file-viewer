1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "file-viewer.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "file-viewer.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "file-viewer.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "file-viewer.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. File Viewer Configuration:
   - Root folder: {{ .Values.env.rootFolder }}
   - Storage path: {{ .Values.persistence.pv.hostPath }}
   - Storage capacity: {{ .Values.persistence.pv.capacity }}

3. Security Context:
   - User ID: {{ .Values.securityContext.uid }}
   - Group ID: {{ .Values.securityContext.gid }}
   - User: {{ .Values.securityContext.user }}

4. Useful commands:
   # Check pod status
   kubectl get pods -l app.kubernetes.io/name={{ include "file-viewer.name" . }}
   
   # View logs  
   kubectl logs -l app.kubernetes.io/name={{ include "file-viewer.name" . }}
   
   # Port forward for local access (if using ClusterIP)
   kubectl port-forward svc/{{ include "file-viewer.fullname" . }} 3000:{{ .Values.service.port }}

   # Check persistent volume
   kubectl get pv {{ include "file-viewer.pvName" . }}
   kubectl get pvc {{ include "file-viewer.pvcName" . }}